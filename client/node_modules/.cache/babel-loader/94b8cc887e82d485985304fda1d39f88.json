{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_POST, POST_ERROR, UPDATE_LIKES } from './actions'; // Get ALl post \n\nexport const getPost = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Like \n\nexport const addLike = post_id => async dispatch => {\n  try {\n    console.log(post_id);\n    const res = await axios.put(`/api/posts/likes/${post_id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id: post_id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Remove Like \n\nexport const removeLike = post_id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlikes/${post_id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id: post_id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Post \n\nexport const deletePost = post_id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/${post_id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: {\n        id: post_id\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Aamir/Desktop/porject/MernStack/client/src/actions.js/post.js"],"names":["axios","setAlert","GET_POST","POST_ERROR","UPDATE_LIKES","getPost","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLike","post_id","console","log","put","id","likes","removeLike","deletePost","delete","DELETE_POST"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {setAlert} from './alert'\r\nimport {\r\n    GET_POST,\r\n    \r\n    POST_ERROR,\r\n    UPDATE_LIKES\r\n} from './actions'\r\n\r\n\r\n// Get ALl post \r\nexport const getPost = () => async dispatch =>{\r\n    try {\r\n        const res = await axios.get('/api/posts')\r\n\r\n        dispatch({\r\n            type:GET_POST,\r\n           payload:res.data\r\n        })\r\n        \r\n    } catch (err) {\r\n        \r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n\r\n// Add Like \r\n\r\n\r\nexport const addLike = post_id => async dispatch => {\r\n    try {\r\n        console.log(post_id)\r\n        const res = await axios.put(`/api/posts/likes/${post_id}`)\r\n        dispatch({\r\n            type:UPDATE_LIKES,\r\n            payload:{id:post_id,likes:res.data}\r\n        })\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n\r\n// Remove Like \r\nexport const removeLike = post_id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/unlikes/${post_id}`)\r\n        dispatch({\r\n            type:UPDATE_LIKES,\r\n            payload:{id:post_id,likes:res.data}\r\n        })\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n\r\n// Delete Post \r\nexport const deletePost = post_id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/posts/${post_id}`)\r\n        dispatch({\r\n            type:DELETE_POST,\r\n            payload:{id:post_id}\r\n        })\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}