{"ast":null,"code":"import React from 'react';\nimport { GET_POST, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_SINGLE_POST, ADD_COMMENT, REMOVE_COMMENT } from '../actions.js/actions';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case ADD_POST:\n      return { ...state,\n        loading: false,\n        posts: [...state.posts, payload]\n      };\n\n    case GET_POST:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case GET_SINGLE_POST:\n      return { ...state,\n        post: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload.id ? { ...post,\n          likes: payload.likes\n        } : post),\n        loadig: false\n      };\n\n    case ADD_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: payload\n        },\n        loading: false\n      };\n\n    case REMOVE_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: state.post.comments.filter(cmnt => cmnt._id == payload.commentId)\n        },\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload.id),\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    default:\n      return { ...state,\n        loading: false\n      };\n  }\n}","map":{"version":3,"sources":["C:/Users/Aamir/Desktop/porject/MernStack/client/src/reducers/post.js"],"names":["React","GET_POST","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_SINGLE_POST","ADD_COMMENT","REMOVE_COMMENT","initialState","posts","post","loading","error","state","action","type","payload","map","_id","id","likes","loadig","comments","filter","cmnt","commentId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,QADJ,EAEIC,UAFJ,EAGIC,YAHJ,EAIIC,WAJJ,EAKIC,QALJ,EAMIC,eANJ,EAOIC,WAPJ,EAQIC,cARJ,QASO,uBATP;AAWA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAC,EADW;AAEjBC,EAAAA,IAAI,EAAC,IAFY;AAGjBC,EAAAA,OAAO,EAAC,IAHS;AAIjBC,EAAAA,KAAK,EAAC;AAJW,CAArB;AAOA,eAAe,UAAUC,KAAK,GAACL,YAAhB,EAA6BM,MAA7B,EAAqC;AAChD,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAiBF,MAAvB;;AAEA,UAAQC,IAAR;AACI,SAAKX,QAAL;AACI,aAAM,EACF,GAAGS,KADD;AAEFF,QAAAA,OAAO,EAAC,KAFN;AAGFF,QAAAA,KAAK,EAAC,CAAC,GAAGI,KAAK,CAACJ,KAAV,EAAgBO,OAAhB;AAHJ,OAAN;;AAKJ,SAAKhB,QAAL;AACI,aAAM,EACF,GAAGa,KADD;AAEFJ,QAAAA,KAAK,EAACO,OAFJ;AAGFL,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAKJ,SAAKN,eAAL;AACI,aAAM,EACF,GAAGQ,KADD;AAEFH,QAAAA,IAAI,EAACM,OAFH;AAGFL,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAKJ,SAAKT,YAAL;AACI,aAAM,EACF,GAAGW,KADD;AAEFJ,QAAAA,KAAK,EAACI,KAAK,CAACJ,KAAN,CAAYQ,GAAZ,CAAgBP,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAO,CAACG,EAArB,GAA0B,EAAC,GAAGT,IAAJ;AAASU,UAAAA,KAAK,EAACJ,OAAO,CAACI;AAAvB,SAA1B,GAAyDV,IAAjF,CAFJ;AAGFW,QAAAA,MAAM,EAAC;AAHL,OAAN;;AAMJ,SAAKf,WAAL;AACI,aAAM,EACF,GAAGO,KADD;AAEFH,QAAAA,IAAI,EAAC,EAAC,GAAGG,KAAK,CAACH,IAAV;AAAeY,UAAAA,QAAQ,EAACN;AAAxB,SAFH;AAGFL,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAKJ,SAAKJ,cAAL;AACI,aAAM,EACF,GAAGM,KADD;AAEFH,QAAAA,IAAI,EAAC,EACD,GAAGG,KAAK,CAACH,IADR;AAEDY,UAAAA,QAAQ,EAACT,KAAK,CAACH,IAAN,CAAWY,QAAX,CAAoBC,MAApB,CAA2BC,IAAI,IAAIA,IAAI,CAACN,GAAL,IAAYF,OAAO,CAACS,SAAvD;AAFR,SAFH;AAMFd,QAAAA,OAAO,EAAC;AANN,OAAN;;AAUJ,SAAKR,WAAL;AACI,aAAM,EACF,GAAGU,KADD;AAEFJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYc,MAAZ,CAAmBb,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAO,CAACG,EAAhD,CAFL;AAGFR,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAOJ,SAAKV,UAAL;AACI,aAAM,EACF,GAAGY,KADD;AAEFD,QAAAA,KAAK,EAACI,OAFJ;AAGFL,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAMJ;AACI,aAAM,EACF,GAAGE,KADD;AAEFF,QAAAA,OAAO,EAAC;AAFN,OAAN;AA3DR;AAiEH","sourcesContent":["import React from 'react'\r\nimport {\r\n    GET_POST,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_SINGLE_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from '../actions.js/actions'\r\n\r\nconst initialState = {\r\n    posts:[],\r\n    post:null,\r\n    loading:true,\r\n    error:{}\r\n}\r\n\r\nexport default function (state=initialState,action) {\r\n    const {type,payload} = action\r\n\r\n    switch (type) {\r\n        case ADD_POST:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                posts:[...state.posts,payload]\r\n            }\r\n        case GET_POST:\r\n            return{\r\n                ...state,\r\n                posts:payload,\r\n                loading:false\r\n            }\r\n        case GET_SINGLE_POST:\r\n            return{\r\n                ...state,\r\n                post:payload,\r\n                loading:false\r\n            }\r\n        case UPDATE_LIKES:\r\n            return{\r\n                ...state,\r\n                posts:state.posts.map(post => post._id === payload.id ? {...post,likes:payload.likes} :post),\r\n                loadig:false\r\n            }\r\n        \r\n        case ADD_COMMENT:\r\n            return{\r\n                ...state,\r\n                post:{...state.post,comments:payload},\r\n                loading:false\r\n            }\r\n        case REMOVE_COMMENT:\r\n            return{\r\n                ...state,\r\n                post:{\r\n                    ...state.post,\r\n                    comments:state.post.comments.filter(cmnt => cmnt._id == payload.commentId )\r\n                },\r\n                loading:false\r\n            }\r\n\r\n        \r\n        case DELETE_POST:\r\n            return{\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== payload.id),\r\n                loading:false\r\n            }\r\n\r\n\r\n        case POST_ERROR:\r\n            return{\r\n                ...state,\r\n                error:payload,\r\n                loading:false\r\n            }\r\n    \r\n        default:\r\n            return{\r\n                ...state,\r\n                loading:false\r\n            }\r\n            \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}