{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Aamir\\\\Desktop\\\\porject\\\\MernStack\\\\client\\\\src\\\\components\\\\profile\\\\ProfileGithub.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getGithub } from '../../actions.js/profile';\n\nconst ProfileGithub = ({\n  username,\n  repos,\n  getGithub\n}) => {\n  _s();\n\n  useEffect(() => {\n    getGithub(username);\n  }, [getGithub, username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-github\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary my-1\",\n      children: \" Github Repos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), repos === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }, this) : repos.map(repo => {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        className: \"repo bg-white p-1 my-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: repo.html_url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: repo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this)\n      }, repo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ProfileGithub, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ProfileGithub;\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithub\n})(ProfileGithub);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"sources":["C:/Users/Aamir/Desktop/porject/MernStack/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","connect","getGithub","ProfileGithub","username","repos","map","repo","html_url","name","_id","mapStateToProps","state","profile"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,SAAR,QAAwB,0BAAxB;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA,KAAV;AAAgBH,EAAAA;AAAhB,CAAD,KAAgC;AAAA;;AAElDF,EAAAA,SAAS,CAAC,MAAI;AACVE,IAAAA,SAAS,CAACE,QAAD,CAAT;AACH,GAFQ,EAEP,CAACF,SAAD,EAAWE,QAAX,CAFO,CAAT;AAIA,sBAAQ;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACJ;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,EAEHC,KAAK,KAAK,IAAV,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,GAEAA,KAAK,CAACC,GAAN,CAAWC,IAAI,IAAI;AAChB;AAAA;AAAoB,QAAA,SAAS,EAAC,wBAA9B;AAAA,+BACI;AAAA,iCACG;AAAA,mCACC;AAAG,cAAA,IAAI,EAAEA,IAAI,CAACC,QAAd;AAAwB,cAAA,MAAM,EAAC,QAA/B;AAAwC,cAAA,GAAG,EAAC,qBAA5C;AAAA,wBACKD,IAAI,CAACE;AADV;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUF,IAAI,CAACG,GAAf;AAAA;AAAA;AAAA;AAAA;AASH,KAVA,CAJG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAiBH,CAvBD;;GAAMP,a;;KAAAA,a;;AAyBN,MAAMQ,eAAe,GAAGC,KAAK,KAAK;AAC9BP,EAAAA,KAAK,EAAGO,KAAK,CAACC,OAAN,CAAcR;AADQ,CAAL,CAA7B;;AAKA,eAAeJ,OAAO,CAACU,eAAD,EAAiB;AAACT,EAAAA;AAAD,CAAjB,CAAP,CAAqCC,aAArC,CAAf","sourcesContent":["import React, { useEffect } from 'react' \r\nimport { connect } from 'react-redux'\r\nimport {getGithub} from '../../actions.js/profile'\r\n\r\n\r\nconst ProfileGithub = ({username,repos,getGithub}) => {\r\n    \r\n    useEffect(()=>{\r\n        getGithub(username);\r\n    },[getGithub,username])\r\n    \r\n    return (<div className='profile-github'>\r\n        <h2 className='text-primary my-1'> Github Repos</h2>\r\n        {repos === null ?\r\n         <div>Loading</div> : \r\n        (repos.map( repo => {\r\n            <div key={repo._id} className='repo bg-white p-1 my-1'>\r\n                <div>\r\n                   <h4>\r\n                    <a href={repo.html_url} target='_blank' rel='noopener noreferrer'>\r\n                        {repo.name}\r\n                        </a>    \r\n                    </h4> \r\n                </div>    \r\n             </div>\r\n        }))\r\n        }\r\n    </div>)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    repos : state.profile.repos,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,{getGithub})(ProfileGithub) \r\n\r\n"]},"metadata":{},"sourceType":"module"}