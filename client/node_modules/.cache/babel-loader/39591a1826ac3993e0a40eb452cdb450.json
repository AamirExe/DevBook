{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Aamir\\\\Desktop\\\\porject\\\\MernStack\\\\client\\\\src\\\\components\\\\profile\\\\ProfileGithub.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getGithub } from '../../actions.js/profile';\nimport Spinner from 'react-bootstrap/Spinner';\n\nconst ProfileGithub = ({\n  username,\n  repos,\n  getGithub\n}) => {\n  _s();\n\n  useEffect(() => {\n    getGithub(username);\n  }, [getGithub, username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-github\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary my-1\",\n      children: \" Github Repos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), repos === null ? /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }, this) : repos.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repo bg-white p-1 my-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: repo.html_url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-primary\",\n            children: [\"Stars:\", repo.stargazers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-light\",\n            children: [\"Watchers:\", repo.watchers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-medium\",\n            children: [\"Forks:\", repo.forks_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, repo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ProfileGithub, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ProfileGithub;\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithub\n})(ProfileGithub);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"sources":["C:/Users/Aamir/Desktop/porject/MernStack/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","connect","getGithub","Spinner","ProfileGithub","username","repos","map","repo","html_url","name","description","stargazers_count","watchers_count","forks_count","_id","mapStateToProps","state","profile"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,SAAR,QAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA,KAAV;AAAgBJ,EAAAA;AAAhB,CAAD,KAAgC;AAAA;;AAElDF,EAAAA,SAAS,CAAC,MAAI;AACVE,IAAAA,SAAS,CAACG,QAAD,CAAT;AACH,GAFQ,EAEP,CAACH,SAAD,EAAWG,QAAX,CAFO,CAAT;AAIA,sBAAQ;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACJ;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,EAEHC,KAAK,KAAK,IAAV,gBACA,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,YADA,GAEAA,KAAK,CAACC,GAAN,CAAWC,IAAI,iBACZ;AAAoB,MAAA,SAAS,EAAC,wBAA9B;AAAA,8BACI;AAAA,gCACG;AAAA,iCACC;AAAG,YAAA,IAAI,EAAEA,IAAI,CAACC,QAAd;AAAwB,YAAA,MAAM,EAAC,QAA/B;AAAwC,YAAA,GAAG,EAAC,qBAA5C;AAAA,sBACKD,IAAI,CAACE;AADV;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADH,eAMI;AAAA,oBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAA,+BACI;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,qBAAd;AAAA,iCACWH,IAAI,CAACI,gBADhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAI,YAAA,SAAS,EAAC,mBAAd;AAAA,oCACcJ,IAAI,CAACK,cADnB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI;AAAI,YAAA,SAAS,EAAC,oBAAd;AAAA,iCACWL,IAAI,CAACM,WADhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA,OAAUN,IAAI,CAACO,GAAf;AAAA;AAAA;AAAA;AAAA,YADH,CAJG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AA+BH,CArCD;;GAAMX,a;;KAAAA,a;;AAuCN,MAAMY,eAAe,GAAGC,KAAK,KAAK;AAC9BX,EAAAA,KAAK,EAAGW,KAAK,CAACC,OAAN,CAAcZ;AADQ,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAACe,eAAD,EAAiB;AAACd,EAAAA;AAAD,CAAjB,CAAP,CAAqCE,aAArC,CAAf","sourcesContent":["import React, { useEffect } from 'react' \r\nimport { connect } from 'react-redux'\r\nimport {getGithub} from '../../actions.js/profile'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nconst ProfileGithub = ({username,repos,getGithub}) => {\r\n    \r\n    useEffect(()=>{\r\n        getGithub(username);\r\n    },[getGithub,username])\r\n    \r\n    return (<div className='profile-github'>\r\n        <h2 className='text-primary my-1'> Github Repos</h2>\r\n        {repos === null ?\r\n         <Spinner animation='border'/> : \r\n        (repos.map( repo => (\r\n            <div key={repo._id} className='repo bg-white p-1 my-1'>\r\n                <div>\r\n                   <h4>\r\n                    <a href={repo.html_url} target='_blank' rel='noopener noreferrer'>\r\n                        {repo.name}\r\n                        </a>    \r\n                    </h4> \r\n                    <p>{repo.description}</p>\r\n                </div>    \r\n                <div>\r\n                    <ul>\r\n                        <li className='badge badge-primary'>\r\n                            Stars:{repo.stargazers_count}\r\n                        </li>\r\n                        <li className='badge badge-light'>\r\n                            Watchers:{repo.watchers_count}\r\n                        </li>\r\n                        <li className='badge badge-medium'>\r\n                            Forks:{repo.forks_count}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n             </div>\r\n        )))\r\n        }\r\n    </div>)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    repos : state.profile.repos,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,{getGithub})(ProfileGithub) \r\n\r\n"]},"metadata":{},"sourceType":"module"}