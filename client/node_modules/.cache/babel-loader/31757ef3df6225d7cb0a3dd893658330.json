{"ast":null,"code":"import React, { Profiler } from 'react';\nimport axios from 'axios';\nimport { CLEAR_PROFILE, DELETE_ACCOUNT, GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, GET_PROFILES } from './actions';\nimport { setAlert } from './alert';\nexport const getCurrentPofile = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get all profile \n\nexport const getProfiles = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get profile by ID \n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create Profile \n\nexport const createProfile = (formData, history, edit) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify(formData);\n    const res = await axios.post('/api/profile', body, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, 'danger'));\n      });\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add experience \n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify(formData);\n    const res = await axios.put('/api/profile/experience', body, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Updated', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, 'danger'));\n      });\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add education \n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify(formData);\n    const res = await axios.put('/api/profile/education', body, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Updated', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, 'danger'));\n      });\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Experience \n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Removed', 'dangers'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Education \n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Removed', 'dangers'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete account and profile\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure ? This cant be undone')) {\n    try {\n      const resp = await axios.delete(`/api/profile`);\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: DELETE_ACCOUNT\n      });\n      dispatch(setAlert('Account Removed', 'dangers'));\n      dispatch(setAlert('Your account has been deleted permenently', 'dangers'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/Aamir/Desktop/porject/MernStack/client/src/actions.js/profile.js"],"names":["React","Profiler","axios","CLEAR_PROFILE","DELETE_ACCOUNT","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","GET_PROFILES","setAlert","getCurrentPofile","dispatch","type","res","get","payload","data","err","msg","response","statusText","status","getProfiles","getProfileById","userId","createProfile","formData","history","edit","config","headers","body","JSON","stringify","post","push","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm","resp"],"mappings":"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","sourcesContent":["import React, { Profiler } from 'react'\r\n\r\nimport axios from 'axios'\r\n\r\nimport {\r\n    CLEAR_PROFILE,\r\n    DELETE_ACCOUNT,\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,GET_PROFILES\r\n} from './actions'\r\nimport { setAlert } from './alert'\r\n\r\n\r\nexport const getCurrentPofile = () => async dispatch =>  {\r\n    dispatch({type:CLEAR_PROFILE})\r\n    try {\r\n        const res = await axios.get('/api/profile/me')       \r\n        \r\n        dispatch({\r\n            type:GET_PROFILE,\r\n            payload:res.data\r\n        })\r\n    \r\n    } catch (err) {\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg: err.response.statusText,status:err.response.status}\r\n        })        \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n// Get all profile \r\n\r\nexport const getProfiles = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/profile')\r\n\r\n        dispatch({\r\n            type:GET_PROFILES,\r\n            payload:res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg: err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n// Get profile by ID \r\nexport const getProfileById = (userId) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/${userId}`)\r\n\r\n        dispatch({\r\n            type:GET_PROFILE,\r\n            payload:res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg: err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Create Profile \r\n\r\n\r\nexport const createProfile = (formData,history,edit) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers:{\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        const body = JSON.stringify(formData)\r\n\r\n        const res = await axios.post('/api/profile', body,config)\r\n\r\n        dispatch({\r\n            type:GET_PROFILE,\r\n            payload:res.data\r\n        })        \r\n\r\n        dispatch(setAlert(edit ? 'Profile Updated':'Profile Created' , 'success'))\r\n        \r\n        if(!edit){\r\n            history.push('/dashboard')\r\n        }\r\n       \r\n        \r\n    } catch (err) {\r\n        \r\n        const errors = err.response.data.errors\r\n\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg,'danger'))\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg: err.response.statusText,status:err.response.status}\r\n        })       \r\n    }\r\n}\r\n\r\n// Add experience \r\n\r\nexport const addExperience = (formData,history ) => async dispatch => {\r\n\r\n    try {\r\n        const config = {\r\n            headers:{\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        const body = JSON.stringify(formData)\r\n\r\n        const res = await axios.put('/api/profile/experience', body,config)\r\n\r\n        dispatch({\r\n            type:UPDATE_PROFILE,\r\n            payload:res.data\r\n        })        \r\n\r\n        dispatch(setAlert('Experience Updated' , 'success'))\r\n          history.push('/dashboard')\r\n        \r\n       \r\n        \r\n    } catch (err) {\r\n        \r\n        const errors = err.response.data.errors\r\n\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg,'danger'))\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg: err.response.statusText,status:err.response.status}\r\n        })       \r\n    }\r\n\r\n}\r\n\r\n\r\n// Add education \r\n\r\nexport const addEducation = (formData,history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers:{\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        const body = JSON.stringify(formData)\r\n\r\n        const res = await axios.put('/api/profile/education', body,config)\r\n\r\n        dispatch({\r\n            type:UPDATE_PROFILE,\r\n            payload:res.data\r\n        })        \r\n\r\n        dispatch(setAlert('Education Updated' , 'success'))\r\n          history.push('/dashboard')\r\n        \r\n       \r\n        \r\n    } catch (err) {\r\n        \r\n        const errors = err.response.data.errors\r\n\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg,'danger'))\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg: err.response.statusText,status:err.response.status}\r\n        })       \r\n    }\r\n}\r\n\r\n\r\n// Delete Experience \r\n\r\nexport const deleteExperience = id => async dispatch =>  {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/experience/${id}`)\r\n        dispatch({\r\n            type:UPDATE_PROFILE,\r\n            payload:res.data\r\n        })\r\n        dispatch(setAlert('Experience Removed' , 'dangers'))\r\n\r\n    } catch (err) {\r\n           \r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg: err.response.statusText,status:err.response.status}\r\n        })       \r\n    }\r\n}\r\n\r\n// Delete Education \r\n\r\nexport const deleteEducation = id => async dispatch =>  {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/education/${id}`)\r\n        dispatch({\r\n            type:UPDATE_PROFILE,\r\n            payload:res.data\r\n        })\r\n        dispatch(setAlert('Education Removed' , 'dangers'))\r\n\r\n    } catch (err) {\r\n           \r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg: err.response.statusText,status:err.response.status}\r\n        })       \r\n    }\r\n}\r\n\r\n\r\n// Delete account and profile\r\n\r\n\r\nexport const deleteAccount =() => async dispatch =>  {\r\n    if(window.confirm('Are you sure ? This cant be undone')) {\r\n        try {\r\n            const resp = await axios.delete(`/api/profile`)\r\n            dispatch({type:CLEAR_PROFILE})\r\n            dispatch({type:DELETE_ACCOUNT})\r\n            dispatch(setAlert('Account Removed' , 'dangers'))\r\n            dispatch(setAlert('Your account has been deleted permenently' , 'dangers'))\r\n    \r\n        } catch (err) {\r\n               \r\n            dispatch({\r\n                type:PROFILE_ERROR,\r\n                payload:{msg: err.response.statusText,status:err.response.status}\r\n            })       \r\n        }\r\n    }\r\n    \r\n    }\r\n    \r\n\r\n    \r\n    "]},"metadata":{},"sourceType":"module"}