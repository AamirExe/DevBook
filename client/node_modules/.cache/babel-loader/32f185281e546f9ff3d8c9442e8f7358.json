{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Aamir\\\\Desktop\\\\porject\\\\MernStack\\\\client\\\\src\\\\components\\\\profile\\\\profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getProfileById } from '../../actions.js/profile';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  console.log(auth);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: profile === null || loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 40\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        className: \"btn btn-light\",\n        children: \"Bact to Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), auth.isAuthenticated && auth.loading === false && auth.user._id === match.params.id && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"edit-experience\",\n        className: \"btn btn-dark\",\n        children: \" Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-grid my-1\",\n        children: [/*#__PURE__*/_jsxDEV(ProfileTop, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(ProfileAbout, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-exp bg-white p-2\",\n          children: profile.experience.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-primary\",\n              children: \"Experience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this), profile.experience.map(exp => /*#__PURE__*/_jsxDEV(ProfileExperience, {\n              experience: exp\n            }, exp._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 55\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"No Experience Credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-edu bg-white p-2\",\n          children: [profile.education.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-primary\",\n              children: \"Education\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this), profile.education.map(edu => /*#__PURE__*/_jsxDEV(ProfileEducation, {\n              education: edu\n            }, edu._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 54\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"No Education Credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 26\n          }, this), profile.githubusername && /*#__PURE__*/_jsxDEV(ProfileGithub, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 61\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/Aamir/Desktop/porject/MernStack/client/src/components/profile/profile.js"],"names":["React","Fragment","useEffect","Link","connect","getProfileById","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","ProfileGithub","Profile","profile","loading","auth","match","params","id","console","log","isAuthenticated","user","_id","experience","length","map","exp","education","edu","githubusername","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {getProfileById} from '../../actions.js/profile'\r\nimport ProfileTop from './ProfileTop'\r\nimport ProfileAbout from './ProfileAbout'\r\nimport ProfileExperience from './ProfileExperience'\r\nimport ProfileEducation from './ProfileEducation'\r\nimport ProfileGithub from './ProfileGithub'\r\n\r\nconst Profile = ({\r\n    getProfileById,\r\n    profile:{profile,loading},\r\n    auth,\r\n    match   \r\n}) => {\r\n\r\n    useEffect(()=>{\r\n        getProfileById(match.params.id)\r\n    },[getProfileById])\r\n    \r\n    console.log(auth)\r\n    return <Fragment>\r\n        {profile === null || loading ? <div>Loading</div> : <Fragment>\r\n            <Link to='/profiles' className ='btn btn-light'>Bact to Profiles</Link>\r\n            {auth.isAuthenticated && auth.loading === false && auth.user._id === match.params.id &&\r\n            (<Link to='edit-experience' className='btn btn-dark'> Edit Profile</Link>)}     \r\n            <div className='profile-grid my-1' >\r\n             <ProfileTop profile={profile} />         \r\n             <ProfileAbout profile={profile} />\r\n             <div className='profile-exp bg-white p-2'>\r\n                 {\r\n                     profile.experience.length > 0 ?\r\n                     \r\n                      \r\n                      (<Fragment>\r\n                        <h2 className='text-primary' >Experience</h2>\r\n                          {\r\n                    \r\n                        profile.experience.map(exp => <ProfileExperience key={exp._id} experience = {exp} /> )\r\n\r\n                        }</Fragment>):\r\n                        (<h4>No Experience Credentials</h4>) \r\n                          \r\n                 }\r\n\r\n             </div>\r\n             <div className='profile-edu bg-white p-2'>\r\n                 {\r\n                     profile.education.length > 0 ?\r\n                      (<Fragment>\r\n                        <h2 className='text-primary' >Education</h2>\r\n                          {\r\n                    \r\n                        profile.education.map(edu => <ProfileEducation key={edu._id} education = {edu} /> )\r\n\r\n                        }</Fragment>):\r\n                        (<h4>No Education Credentials</h4>) \r\n                 }\r\n\r\n                 {\r\n                     profile.githubusername && <ProfileGithub />\r\n                 }\r\n\r\n             </div>\r\n\r\n\r\n            </div>\r\n            </Fragment>}\r\n\r\n    </Fragment>\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile:state.profile,\r\n    auth:state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps,{getProfileById})(Profile)\r\n"]},"metadata":{},"sourceType":"module"}